apply plugin: 'eclipse'

File libDir = new File('C:/Users/adrian/Programme/libs/')

ext.libs = [
  //	craftbukkit:	files(new File(libDir, 'craftbukkit.jar')),
  bukkit:	'org.bukkit:bukkit:+',
  joda_time:		'joda-time:joda-time:2.8.2',
  particleeffect:	'com.darkblade12:particleeffect:1.7@jar',
  terrania_core:	files(new File(libDir, 'Terrania-Core_0.1a.jar')),

  //	worldedit:		files(new File(libDir, 'worldedit-bukkit-6.1.jar')),
  //	worldguard:		files(new File(libDir, 'worldguard-6.1.jar'))
  worldedit:		'com.sk89q:worldedit:+@jar',
  worldguard:		'com.sk89q:worldguard:+@jar'
]

task wrapper(type: Wrapper) {
  gradleVersion = 2.9
}

ext.getResolvedArtifacts = { Object arg ->
  Dependency dep = dependencies.create arg
  Configuration cfg = configurations.detachedConfiguration dep
  Set<File> resolved = cfg.resolve()
  return files(resolved)
}

allprojects {
  repositories {
    mavenCentral()
    maven { url 'http://maven.sk89q.com/artifactory/libs-release-local' }
    maven { url 'http://repo.sinndev.com/content/groups/public' }
  }

  plugins.withType(JavaPlugin) {
    //		compileJava.options.fork = true
    //		compileJava.options.forkOptions.executable = 'C:/Program Files/Java/jdk1.7.0_79/bin/javac'
    sourceCompatibility = 1.7
    plugins.withType(EclipsePlugin) {
      eclipse.classpath.file.whenMerged { cp ->
        cp.entries.find { it.kind == 'con' &&it.path.contains('JRE_CONTAINER') }.each {
          it.path += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/jdk1.7.0_79"
        }
      }
    }
  }

  plugins.withType(EclipsePlugin) {
    cleanEclipse << {
      delete('.settings')
    }
    tasks.eclipse.dependsOn cleanEclipse
  }

}
